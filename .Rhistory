d4$lower = proj_quantiles[1, , 4]
d4$log_ent_pc = proj_quantiles[2, , 4]
d4$upper = proj_quantiles[3, , 4]
d14 <- rbind(d1, d2, d3, d4)
View(d14)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(y_proj[, i, j], probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[1]
d1$lower = proj_quantiles[1, , 1]
d1$log_ent_pc = proj_quantiles[2, , 1]
d1$upper = proj_quantiles[3, , 1]
d2 <- data.frame(year = proj_years)
d2$state = states[2]
d2$lower = proj_quantiles[1, , 2]
d2$log_ent_pc = proj_quantiles[2, , 2]
d2$upper = proj_quantiles[3, , 2]
d3 <- data.frame(year = proj_years)
d3$state = states[3]
d3$lower = proj_quantiles[1, , 3]
d3$log_ent_pc = proj_quantiles[2, , 3]
d3$upper = proj_quantiles[3, , 3]
d4 <- data.frame(year = proj_years)
d4$state = states[4]
d4$lower = proj_quantiles[1, , 4]
d4$log_ent_pc = proj_quantiles[2, , 4]
d4$upper = proj_quantiles[3, , 4]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc), color = state)+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc), color = state)+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper), alpha = 0.3, fill = "state")
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = "state"), alpha = 0.3)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
View(d)
which(California == states)
which($California$ == states)
which("California" == states)
which("California" == states)
which("Mississippi" == states)
which("Ohio" == states)
which("Texas" == states)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(y_proj[, i, j], probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$log_ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[2]
d2$lower = proj_quantiles[1, , 2]
d2$log_ent_pc = proj_quantiles[2, , 2]
d2$upper = proj_quantiles[3, , 2]
d3 <- data.frame(year = proj_years)
d3$state = states[3]
d3$lower = proj_quantiles[1, , 3]
d3$log_ent_pc = proj_quantiles[2, , 3]
d3$upper = proj_quantiles[3, , 3]
d4 <- data.frame(year = proj_years)
d4$state = states[4]
d4$lower = proj_quantiles[1, , 4]
d4$log_ent_pc = proj_quantiles[2, , 4]
d4$upper = proj_quantiles[3, , 4]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(exp(y_proj[, i, j]), probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[2]
d2$lower = proj_quantiles[1, , 2]
d2$log_ent_pc = proj_quantiles[2, , 2]
d2$upper = proj_quantiles[3, , 2]
d3 <- data.frame(year = proj_years)
d3$state = states[3]
d3$lower = proj_quantiles[1, , 3]
d3$log_ent_pc = proj_quantiles[2, , 3]
d3$upper = proj_quantiles[3, , 3]
d4 <- data.frame(year = proj_years)
d4$state = states[4]
d4$lower = proj_quantiles[1, , 4]
d4$log_ent_pc = proj_quantiles[2, , 4]
d4$upper = proj_quantiles[3, , 4]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[1:4])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(exp(y_proj[, i, j]), probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[2]
d2$lower = proj_quantiles[1, , 2]
d2$ent_pc = proj_quantiles[2, , 2]
d2$upper = proj_quantiles[3, , 2]
d3 <- data.frame(year = proj_years)
d3$state = states[3]
d3$lower = proj_quantiles[1, , 3]
d3$ent_pc = proj_quantiles[2, , 3]
d3$upper = proj_quantiles[3, , 3]
d4 <- data.frame(year = proj_years)
d4$state = states[4]
d4$lower = proj_quantiles[1, , 4]
d4$ent_pc = proj_quantiles[2, , 4]
d4$upper = proj_quantiles[3, , 4]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[2,3,4,5])
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[2:5])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[2:5])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14|>filter(state=states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14|>filter(state = states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14|>filter(state = states[5]), mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[2:5])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14|>filter(state==states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14|>filter(state == states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14|>filter(state == states[5]), mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
y_proj[, 12, 5]
exp(y_proj[, 12, 5])
exp(y_proj[, 13, 5])
exp(y_proj[, 14, 5])
exp(y_proj[, 14, 5])
exp(y_proj[, 13, 5])
exp(y_proj[, 10, 5])
which("California" == states)
which("Mississippi" == states)
which("Ohio" == states)
which("Texas" == states)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14|>filter(state==states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14|>filter(state == states[5]), mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14|>filter(state == states[5]), mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
states[c(5,25,36,44)]
View(d_proj_14)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(exp(y_proj[, i, j]), probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(exp(y_proj[, i, j]), probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(y_proj[, i, j], probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$log_ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$log_ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$log_ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$log_ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(y_proj[, i, j], probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$log_ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$log_ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$log_ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$log_ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)+
theme_bw()+
labs(y = log(entries per capita))
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(y_proj[, i, j], probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$log_ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$log_ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$log_ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$log_ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
mutate(log_ent_pc = log(ent_pc))|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =log_ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=log_ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = log_ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)+
theme_bw()+
labs(y = "log(entries per capita)")
# then proceed as normal to get median, quantiles etc
proj_quantiles <- array(NA, c(3, length(proj_years), length(states)))
for(i in 1:length(proj_years)){
for(j in 1:length(states)){
proj_quantiles[, i, j] <- quantile(exp(y_proj[, i, j]), probs = c(0.025, 0.5, 0.975))
}
}
d1 <- data.frame(year = proj_years)
d1$state = states[5]
d1$lower = proj_quantiles[1, , 5]
d1$ent_pc = proj_quantiles[2, , 5]
d1$upper = proj_quantiles[3, , 5]
d2 <- data.frame(year = proj_years)
d2$state = states[25]
d2$lower = proj_quantiles[1, , 25]
d2$ent_pc = proj_quantiles[2, , 25]
d2$upper = proj_quantiles[3, , 25]
d3 <- data.frame(year = proj_years)
d3$state = states[36]
d3$lower = proj_quantiles[1, , 36]
d3$ent_pc = proj_quantiles[2, , 36]
d3$upper = proj_quantiles[3, , 36]
d4 <- data.frame(year = proj_years)
d4$state = states[44]
d4$lower = proj_quantiles[1, , 44]
d4$ent_pc = proj_quantiles[2, , 44]
d4$upper = proj_quantiles[3, , 44]
d_proj_14 <- rbind(d1, d2, d3, d4)
d14 <- d|>
filter(state %in% states[c(5,25,36,44)])
ggplot(d14, aes(x=year, y =ent_pc))+
geom_line(data = d14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_line(data = d_proj_14, mapping = aes(x=year, y=ent_pc, color = state))+
geom_ribbon(data = d_proj_14, mapping = aes(y = ent_pc, ymin = lower, ymax = upper, fill = state), alpha = 0.3)+
theme_bw()+
labs(y = "log(entries per capita)")
library(geofacet)
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state)
library(geofacet)
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state)+
theme(strip.text.x = element_text(size = 6))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 6))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 6))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 4))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 5))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 6))+
theme(axis.text=element_text(size = 6))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y")+
theme(strip.text.x = element_text(size = 5))+
theme(axis.text=element_text(size = 5))
library(geofacet)
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state)+
theme(strip.text.x = element_text(size = 5))+
theme(axis.text=element_text(size = 5))
library(geofacet)
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state)+
theme(strip.text.x = element_text(size = 6))+
theme(axis.text=element_text(size = 6))
library(geofacet)
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, ncol = 6)+
theme(strip.text.x = element_text(size = 6))+
theme(axis.text=element_text(size = 6))
d |>
ggplot(aes(year, ent_pc)) +
geom_line()+
theme_bw() +
facet_geo(~state, scales = "free_y", ncol = 6)+
theme(strip.text.x = element_text(size = 5))+
theme(axis.text=element_text(size = 5))
View(d)
