for (i in samp100){
row_data <- yrep2[i, ]
p <- ggplot(data.frame(x=row_data), aes(x=x))+
geom_density()
plots[[i]] <- p
}
plots <- list()
for (i in samp100){
row_data <- yrep2[i, ]
p <- ggplot(data.frame(x=row_data), aes(x=x))+
geom_density()
plots[[i]] <- p
}
library(gridExtra)
grid.arrange(grobs = plots, ncol = 10)
plots <- list()
for (i in samp100){
row_data <- yrep2[i, ]
p <- ggplot(data.frame(x=row_data), aes(x=x))+
geom_density(aes(y= ..scaled..))
plots[[i]] <- p
}
library(gridExtra)
grid.arrange(grobs = plots, ncol = 10)
plots <- list()
for (i in samp100){
row_data <- yrep2[i, ]
p <- ggplot(data.frame(x=row_data), aes(x=x))+
geom_density(aes(y= ..scaled..))+
ggtitle(sprintf("Row %d", i))
plots[[i]] <- p
}
library(gridExtra)
grid.arrange(grobs = plots, ncol = 10)
df <- data.frame(id = samp100, data[, samp100])
df <- data.frame(x = 1:3860, t(yrep2[samp100, ])
df <- data.frame(x = 1:3860, t(yrep2[samp100, ]))
df <- data.frame(x = 1:3842, t(yrep2[samp100, ]))
View(df)
df <- data.frame(t(yrep2[samp100, ]))
df <- data.frame(t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
df <- data.frame(t(yrep2[samp100, ]))
df_long <- pivot_longer(df, names_to = "variable", values_to = "value")
library(tidyr)
df <- data.frame(t(yrep2[samp100, ]))
df_long <- pivot_longer(df, names_to = "variable", values_to = "value")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value)) +
geom_density()
View(df_long)
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value)) +
geom_density(color="black"")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value)) +
geom_density(color="black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, color=variable)) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, color=variable)) +
geom_density(color="black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = 1)) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = 1)) +
geom_density()
# Load required packages
library(ggplot2)
library(tidyr)
# Generate example data
set.seed(123)
data <- matrix(rnorm(1000*3860), nrow = 1000, ncol = 3860)
# Select 100 random rows
random_rows <- sample(1:nrow(data), size = 100, replace = FALSE)
# Create a data frame with the selected rows
df <- data.frame(x = 1:3860, t(data[random_rows, ]))
# Reshape the data frame into long format
df_long <- pivot_longer(df, cols = -x, names_to = "Row", values_to = "Value")
# Create the plot with 100 density curves
ggplot(df_long, aes(x = Value, group = 1)) +
geom_density(color = "black") +
labs(x = "Value", y = "Density", title = "Distribution of Randomly Selected Rows")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = "blue")) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = "gray")) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = "black")) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = black)) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = blues9)) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = "blues9")) +
geom_density()
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, color = variable)) +
geom_density()+
scale_color_manual(values = "blue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = variable)) +
geom_density()+
scale_color_manual(values = "blue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable, color = variable)) +
geom_density()+
scale_color_manual(values = "black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable) +
geom_density(color = "black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable)) +
geom_density(color = "black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable)) +
geom_density(color = "blue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable)) +
geom_density(color = "paleblue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot(df_long, aes(x = value, group = variable)) +
geom_density(color = "lightblue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "lightblue")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "lightblue")+
geom_density(data = ds, aes(x = log_weight), color = "black")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "lightblue", show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight), color = "black", show.legend = TRUE)
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "lightblue", show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight), color = "black", show.legend = TRUE)+
scale_color_manual(name = "rows", values = c("yrep2" = "lightblue", "y" = "black"))
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "yrep2", show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight), color = "y", show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"))
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable), color = "yrep2", show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight), color = "y", show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"), name = "rows")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, color = "yrep2"), show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight, color = "y"), show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"), name = "rows")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable, color = "yrep2"), show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight, color = "y"), show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"), name = "rows")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable, color = "yrep2"), show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight, color = "y"), show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"))
ppc_stat_grouped(ds$log_weight, yrep1, group = ds$preterm, stat = 'median')
t_y <- mean(y<=log(2.5))
t_y <- mean(y<=log(2.5))
t_y
t_y <- mean(y<=log(2.5))
t_y_rep1 <- sapply(1:nrow(yrep1), function(i) mean(yrep1[i,]<=log(2.5) ))
t_y <- mean(y<=log(2.5))
t_y_rep1 <- sapply(1:nrow(yrep1), function(i) mean(yrep1[i,]<=log(2.5) ))
t_y <- mean(y<=log(2.5))
t_y_rep1 <- sapply(1:nrow(yrep1), function(i) mean(yrep1[i,]<=log(2.5) ))
t_y_rep1
t_y <- mean(y<=log(2.5))
t_yrep1 <- sapply(1:1000, function(i) mean(yrep1[i,]<=log(2.5)))
t_yrep2 <- sapply(1:1000, function(i) mean(yrep1[i,]<=log(2.5)))
ggplot(data=as_tiblle(t_yrep1), aes(value))+
geom_histogram()
ggplot(data=as_tible(t_yrep1), aes(value))+
geom_histogram()
ggplot(data=as.tible(t_yrep1), aes(value))+
geom_histogram()
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram()
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram()+
geom_vline(aex(xintercept = t_y))
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram()+
geom_vline(aes(xintercept = t_y))
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram(aes(fill = "yrep1"))+
geom_vline(aes(xintercept = t_y, color ' "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep1" = "lightblue"))
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram(aes(fill = "yrep1"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep1" = "lightblue"))
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram(aes(fill = "yrep1"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep1" = "lightblue"))+
ggtitle("Model 1")
ggplot(data=as.tibble(t_yrep2), aes(value))+
geom_histogram(aes(fill = "yrep2"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep2" = "lightblue"))+
ggtitle("Model 2")
t_y <- mean(y<=log(2.5))
t_yrep1 <- sapply(1:1000, function(i) mean(yrep1[i,]<=log(2.5)))
t_yrep2 <- sapply(1:1000, function(i) mean(yrep2[i,]<=log(2.5)))
ggplot(data=as.tibble(t_yrep2), aes(value))+
geom_histogram(aes(fill = "yrep2"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep2" = "lightblue"))+
ggtitle("Model 2")
loglik1 <- extract(mod1)[["log_lik"]]
loglik2 <- extract(mod2)[["log_lik"]]
loglik1 <- extract(mod1)[["log_lik"]]
loglik2 <- extract(mod2)[["log_lik"]]
loo1 <- loo(loglik1, save_psis = TRUE)
loo2 <- loo(loglik2, save_psis = TRUE)
loo1
loo2
loo_compare(loo1, loo2)
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
loglik1 <- extract(mod1)[["log_lik"]]
loglik2 <- extract(mod2)[["log_lik"]]
loo1 <- loo(loglik1, save_psis = TRUE)
loo2 <- loo(loglik2, save_psis = TRUE)
loo1
loo2
loo_compare(loo1, loo2)
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
View(loglik1)
View(loglik2)
rm(list())
rm(list()=ls)
rm(list=ls())
library(tidyverse)
library(here)
# for bayes stuff
library(rstan)
library(bayesplot)
library(loo)
library(tidybayes)
ds <- read_rds(here("births_2017_sample.RDS"))
head(ds)
ds <- ds %>%
rename(birthweight = dbwt, gest = combgest) %>%
mutate(preterm = ifelse(gest<32, "Y", "N")) %>%
filter(ilive=="Y",gest< 99, birthweight<9.999)
ds|>
ggplot(aes(x=log(gest), y=log(birthweight), color=preterm))+
geom_point(size=1.0)+
geom_smooth(method=lm)
ds|>
ggplot()+
geom_histogram(aes(x=log(birthweight), y=..density.., fill=sex), position = 'dodge')
ds|>
ggplot(aes(x=mager, y=log(birthweight)))+
geom_point(size=1.0)
set.seed(123)
params <- data.frame(beta1 = rnorm(1000, 0, 1), beta2 = rnorm(1000, 0, 1), sigma = abs(rnorm(1000, 0, 1)))
m <- mean(log(ds$gest))
s <- sd(log(ds$gest))
ds <- ds|>
mutate(gest_c = (log(gest)-m)/s)
set.seed(321)
samples = data.frame()
for (j in seq_len(nrow(params))) {
y <- rnorm(nrow(ds), mean = params$beta1[j] + params$beta2[j] * ds$gest_c, sd = params$sigma[j])
samples <- rbind(samples, data.frame(gest_c = ds$gest_c, beta1 = params$beta1[j], beta2 = params$beta2[j], sigma = params$sigma[j], y = y))
}
samples|>
ggplot()+
geom_histogram(aes(x=y, y=..density..), binwidth = 1)+
xlim(-15,15)
set.seed(231)
params2 <- data.frame(beta1 = rnorm(10, 0, 1), beta2 = rnorm(10, 0, 1), sigma = abs(rnorm(10, 0, 1)))
samples2 = data.frame()
for (j in seq_len(nrow(params2))) {
y <- rnorm(nrow(ds), mean = params2$beta1[j] + params2$beta2[j] * ds$gest_c, sd = params2$sigma[j])
samples2 <- rbind(samples2, data.frame(gest_c = ds$gest_c, beta1 = params2$beta1[j], beta2 = params2$beta2[j], sigma = params2$sigma[j], y = y))
}
samples2|>
mutate(gest = exp(s*gest_c+m))|>
ggplot(aes(x=gest, y=y))+
geom_point()
ds$log_weight <- log(ds$birthweight)
ds$log_gest_c <- (log(ds$gest) - mean(log(ds$gest)))/sd(log(ds$gest))
# put into a list
stan_data <- list(N = nrow(ds),
log_weight = ds$log_weight,
log_gest = ds$log_gest_c)
mod1 <- stan(data = stan_data,
file = here("simple_weight.stan"),
iter = 500,
seed = 243)
summary(mod1)$summary[c("beta[1]", "beta[2]", "sigma"),]
exp(1.1626250 + 0.1436183*(log(37)-m)/s)
ds$preterm <- ifelse(ds$preterm == "Y", 1, 0)
# put into a list
stan_data2 <- list(N = nrow(ds),
log_weight = ds$log_weight,
log_gest = ds$log_gest_c,
preterm = ds$preterm)
my_mod2 <- stan(data = stan_data2,
file = here("weight2.stan"),
iter = 500,
seed = 243)
load(here("mod2.Rda"))
summary(mod2)$summary[c(paste0("beta[", 1:4, "]"), "sigma"),]
summary(my_mod2)$summary[c("beta[1]", "beta[2]", "beta[3]", "beta[4]", "sigma"),]
set.seed(1856)
y <- ds$log_weight
yrep1 <- extract(mod1)[["log_weight_rep"]]
yrep2 <- extract(my_mod2)[["log_weight_rep"]]
dim(yrep1)
samp100 <- sample(nrow(yrep1), 100)
ppc_dens_overlay(y, yrep1[samp100, ])  + ggtitle("distribution of observed versus predicted birthweights")
library(tidyr)
df <- data.frame(x=1:3842, t(yrep2[samp100, ]))
df_long <- pivot_longer(df, cols = -x, names_to = "variable", values_to = "value")
ggplot() +
geom_density(data = df_long, aes(x=value, group = variable, color = "yrep2"), show.legend = TRUE)+
geom_density(data = ds, aes(x = log_weight, color = "y"), show.legend = TRUE)+
scale_color_manual(values = c("yrep2" = "lightblue", "y" = "black"))
ppc_stat_grouped(ds$log_weight, yrep1, group = ds$preterm, stat = 'median')
t_y <- mean(y<=log(2.5))
t_yrep1 <- sapply(1:1000, function(i) mean(yrep1[i,]<=log(2.5)))
t_yrep2 <- sapply(1:1000, function(i) mean(yrep2[i,]<=log(2.5)))
ggplot(data=as.tibble(t_yrep1), aes(value))+
geom_histogram(aes(fill = "yrep1"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep1" = "lightblue"))+
ggtitle("Model 1")
ggplot(data=as.tibble(t_yrep2), aes(value))+
geom_histogram(aes(fill = "yrep2"))+
geom_vline(aes(xintercept = t_y, color = "y"))+
scale_color_manual(values = c("y" = "darkblue"))+
scale_fill_manual(values = c("yrep2" = "lightblue"))+
ggtitle("Model 2")
loglik1 <- extract(mod1)[["log_lik"]]
loglik2 <- extract(mod2)[["log_lik"]]
loo1 <- loo(loglik1, save_psis = TRUE)
loo2 <- loo(loglik2, save_psis = TRUE)
loo1
loo2
loo_compare(loo1, loo2)
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
View(loglik2)
loglik1 <- extract(mod1)[["log_lik"]]
loglik2 <- extract(my_mod2)[["log_lik"]]
loo1 <- loo(loglik1, save_psis = TRUE)
loo2 <- loo(loglik2, save_psis = TRUE)
loo1
loo2
loo_compare(loo1, loo2)
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object))
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object))
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object)) + ggtitle("Model1")
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object)) + gggtitle("Model2")
ppc_loo_pit_overlay(yrep = yrep1, y = y, lw = weights(loo1$psis_object)) + ggtitle("Model1")
ppc_loo_pit_overlay(yrep = yrep2, y = y, lw = weights(loo2$psis_object)) + ggtitle("Model2")
View(ds)
ds$sex <- ifelse(ds$sex == "M", 1, 0)
# put into a list
stan_data3 <- list(N = nrow(ds),
log_weight = ds$log_weight,
log_gest = ds$log_gest_c,
preterm = ds$preterm,
sex = ds$sex)
mod3 <- stan(data = stan_data3,
file = here("weight3.stan"),
iter = 500,
seed = 243)
summary(mod3)$summary[c("beta[1]", "beta[2]", "beta[3]", "beta[4]", "beta[5]", "sigma"),]
set.seed(1856)
yrep3 <- extract(mod3)[["log_weight_rep"]]
ppc_dens_overlay(y, yrep3[samp100, ])  + ggtitle("distribution of observed versus predicted birthweights")
set.seed(1856)
yrep3 <- extract(mod3)[["log_weight_rep"]]
ppc_dens_overlay(y, yrep2[samp100, ])  + ggtitle("distribution of observed versus predicted birthweights")
ppc_dens_overlay(y, yrep3[samp100, ])  + ggtitle("distribution of observed versus predicted birthweights")
set.seed(1856)
yrep3 <- extract(mod3)[["log_weight_rep"]]
ppc_dens_overlay(y, yrep2[samp100, ])  + ggtitle("Model 2: distribution of observed versus predicted birthweights")
ppc_dens_overlay(y, yrep3[samp100, ])  + ggtitle("Model 3: distribution of observed versus predicted birthweights")
loglik3 <- extract(mod3)[["log_lik"]]
loo3 <- loo(loglik3, save_psis = TRUE)
loo_compare(loo2, loo3)
loo2
loo3
samples|>
ggplot()+
geom_histogram(aes(x=y, y=..density..), binwidth = 1)+
xlim(-15,15)+
+labs(x="log(birthweight)")
samples|>
ggplot()+
geom_histogram(aes(x=y, y=..density..), binwidth = 1)+
xlim(-15,15)+
labs(x="log(birthweight)")
set.seed(231)
params2 <- data.frame(beta1 = rnorm(10, 0, 1), beta2 = rnorm(10, 0, 1), sigma = abs(rnorm(10, 0, 1)))
samples2 = data.frame()
for (j in seq_len(nrow(params2))) {
y <- rnorm(nrow(ds), mean = params2$beta1[j] + params2$beta2[j] * ds$gest_c, sd = params2$sigma[j])
samples2 <- rbind(samples2, data.frame(gest_c = ds$gest_c, beta1 = params2$beta1[j], beta2 = params2$beta2[j], sigma = params2$sigma[j], y = y))
}
samples2|>
mutate(gest = exp(s*gest_c+m))|>
ggplot(aes(x=gest, y=y))+
geom_point()+
lab(y="log(birthweight)")
set.seed(231)
params2 <- data.frame(beta1 = rnorm(10, 0, 1), beta2 = rnorm(10, 0, 1), sigma = abs(rnorm(10, 0, 1)))
samples2 = data.frame()
for (j in seq_len(nrow(params2))) {
y <- rnorm(nrow(ds), mean = params2$beta1[j] + params2$beta2[j] * ds$gest_c, sd = params2$sigma[j])
samples2 <- rbind(samples2, data.frame(gest_c = ds$gest_c, beta1 = params2$beta1[j], beta2 = params2$beta2[j], sigma = params2$sigma[j], y = y))
}
samples2|>
mutate(gest = exp(s*gest_c+m))|>
ggplot(aes(x=gest, y=y))+
geom_point()+
labs(y="log(birthweight)")
